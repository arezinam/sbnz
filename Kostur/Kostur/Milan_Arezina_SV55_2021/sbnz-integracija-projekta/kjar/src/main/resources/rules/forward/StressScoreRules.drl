package rules.forward;

import com.ftn.sbnz.model.models.UserActivity;
import com.ftn.sbnz.model.models.TaskEvent;
import com.ftn.sbnz.model.models.SelfReportEvent;
import com.ftn.sbnz.model.models.StressScore;
import com.ftn.sbnz.model.models.StressLevel;
import java.util.List;

// --- Declare events for STREAM mode ---
declare SelfReportEvent
    @role(event)
end

declare TaskEvent
    @role(event)
end

// --- Night and weekend points ---
rule "Score from night and weekend"
when
    $ua : UserActivity($userId : userId)
    $score : StressScore(userId == $userId)
then
    double points = 0;
    if($ua.isNight()) points += 2;
    if($ua.isWeekend()) points += 2;

    modify($score) {
        setScore($score.getScore() + points);
    }
end

// --- Multitasking points ---
rule "Score from multitasking"
when
    $ua : UserActivity($userId : userId)
    $score : StressScore(userId == $userId)
    $tasks : List() from collect(
        TaskEvent(userId == $userId, endTime == null)
    )
then
    int activeTasks = $tasks.size();
    double points = 0;

    if(activeTasks == 2) {
        points = 1;
    } else if(activeTasks == 3) {
        points = 3;
    } else if(activeTasks > 3) {
        points = 5;
    }

    modify($score) {
        setScore($score.getScore() + points);
    }
end

// --- Work intensity points ---
rule "Score from work intensity"
when
    $score : StressScore()
    $tasks : List() from collect(
        TaskEvent(endTime == null)
    )
then
    double totalIntensity = 0;
    for(Object obj : $tasks) {
        TaskEvent task = (TaskEvent) obj;
        totalIntensity += task.getIntensity();
    }

    modify($score) {
        setScore($score.getScore() + totalIntensity);
    }
end

// --- Self-report points (last 8h) ---
rule "Score from self report"
when
    $score : StressScore()
    $sr : List() from collect(
        SelfReportEvent( $ts : timestampMillis ) over window:time(8h)
    )
then
    if(!$sr.isEmpty()) {
        SelfReportEvent latest = (SelfReportEvent) $sr.get($sr.size() - 1);
        modify($score) {
            setScore($score.getScore() + latest.getStressLevel());
        }
    }
end

// --- Update stress level ---
rule "Update stress level"
when
    $score : StressScore($s : score, $l : level)
then
    StressLevel newLevel = StressLevel.fromScore($s);
    if($l != newLevel) {
        modify($score) {
            setLevel(newLevel);
        }
    }
end
